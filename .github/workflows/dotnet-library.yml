on:
  workflow_call:
    inputs:
      application-name:
        type: string
        description: The application name (repository name without api/contract/ui)
        required: true
      environment-name:
        type: string
        description: The keyword used to define your environment repository
        required: false
        default: gitops
      repository:
        description: Repository name; format = [organization]/[repository-name]
        required: true
        type: string
      solution-location:
        description: Additional folders to get to solution file location
        required: false
        default: Source/
        type: string
      replacements-in:
        type: string
        description: Replacement placeholders separated by a semicolon (;)
        required: false
        default: ""
    secrets:
      aws-region:
        description: The region in AWS to push to
        required: true
      pat-github:
        description: GitHub PAT
        required: true
      replacements-out:
        description: Replacement values separated by a semicolon (;)
        required: false
jobs:
  preparations:
    name: Preparations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{inputs.repository}}
          token: ${{ secrets.pat-github }}
          path: workflow/repository
          fetch-depth: 0
      - name: Checkout JayTech actions
        uses: actions/checkout@v3
        with:
          ref: master
          repository: JayTechNL/jaytech-tools-github-actions
          token: ${{ secrets.pat-github }}
          path: workflow/actions
      - name: Replace placeholders
        uses: ./workflow/actions/replace-placeholders
        with:
          replacements-in: ${{inputs.replacements-in}}
          replacements-out: ${{secrets.replacements-out}}
      - name: Upload prepared repository
        uses: actions/upload-artifact@v3
        with:
          name: workflow
          path: workflow
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
      - name: Debug
        shell: bash
        run: ls -R -A
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7      
        with:
          targetPath: "./workflow/repository"
          useConfigFile: true
          configFilePath: "./workflow/repository/GitVersion.yaml"
      - name: Display GitVersion outputs
        shell: bash
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
          echo "EscapedBranchName: ${{ steps.gitversion.outputs.escapedBranchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
          echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"
  build:
    needs: preparations
    name: Build .NET
    runs-on: ubuntu-latest
    steps:
      - name: Download prepared repository
        uses: actions/download-artifact@v3
        with:
          name: workflow
          path: workflow
      - name: .NET Build
        uses: ./workflow/actions/dotnet-build
        with:
          solution-path: ${{inputs.solution-location}}
  test:
    name: Test .NET
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download prepared repository
        uses: actions/download-artifact@v3
        with:
          name: workflow
          path: workflow
      - name: .NET Test
        uses: ./workflow/actions/dotnet-test
        with:
          solution-path: ${{inputs.solution-location}}
  test-optional:
    name: Test .NET (optional)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download prepared repository
        uses: actions/download-artifact@v3
        with:
          name: workflow
          path: workflow
      - name: Stryker Solution
        uses: ./workflow/actions/stryker-solution
        with:
          projects: JayTech.Services.JayTech.Api
          test-project: JayTech.Services.JayTech.Tests.Unit
  continuous-integration:
    name: Continuous Integration
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download prepared repository
        uses: actions/download-artifact@v3
        with:
          name: workflow
          path: workflow
      - name: Determine Version
        uses: ./workflow/actions/gitversion-semver
        with:
          prerelease: true
      # - name: jta-nuget-push-azure
      #   uses: ./wd/actions/jta-nuget-push-azure
      #   with:
      #     software-version: ${{env.SOFTWARE_VERSION}}
      #     dotnet-version: ${{env.DOTNET_VERSION}}
      #     project-folder: workflow-repo/Source
      #     azure-api-key: ${{env.AZURE_API_KEY}}
      #     azure-source: ${{env.AZURE_SOURCE}}
      #     azure-feed: ${{env.AZURE_FEED}}